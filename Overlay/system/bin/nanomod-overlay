#!/magisk/NanoMod/system/bin/bash

# check for configuration files
config_locations="/sdcard /external_sd /persist /data $(dirname ${ZIP}))"

get_config () {
	config=""
	config_exists=0
	for path in ${config_locations}; do
		if test -r "${path}/${1}" -a -f "${path}/${1}"; then
			config="${path}/${1}"
			config_exists=1
			return
		fi
	done
}

get_config .nanomod-overlay

if [[ -d /magisk/NanoMod ]]; then
	MODPATH=/magisk/NanoMod
elif [[ -d /magisk/NanoModmicroG ]]; then
	MODPATH=/magisk/NanoModmicroG
else
	echo "NanoMod is not installed as a Magisk Module, exiting"
	exit 1
fi

if [[ -f ${config} ]]; then
	source ${config}
else	echo "${config} does not exist!"
	exit 1
fi

if ! which awk >/dev/null; then
	awk="/data/magisk/busybox awk"
else	awk="$(which awk)"
fi

_show_name () {
	aapt dump badging "${1}" 2>/dev/null | \
		${awk} -F \' '/application: label/{print $2}'
}

_rm_overrides () {
	LIST=($(find "${MODPATH}/system" -name "*.replace"))

	if [[ ${LIST[*]} != "" ]]; then
		for app in "${LIST[@]}"; do
			rm -rf "$(dirname "${app}")"
		done
	fi
}

_add_override () {

	mkdir -p "${MODPATH}/system/${1}/${2}"
	touch "${MODPATH}/system/${1}/${2}/.replace"

}

_remove_override () {

	rm -rf "${MODPATH}/system/${1}"

}

case ${1} in
	-l | --list )
		echo "Overrides exist for following applications in /system/app:

$(printf '  * %s\n' "${APPS[@]}")

Overrides exist for following applications in /system/priv-app:

$(printf '  * %s\n' "${PRIV_APPS[@]}")
"
	;;

	-a | --add )
		if [[ -d /system/app/${2} ]]; then
			echo "Adding override for app: \"${2}\""
			echo "APPS=(
$(printf '%s\n' "${APPS[@]}")
${2}
)
PRIV_APPS=(
$(printf '%s\n' "${PRIV_APPS[@]}")
)" > "${config}"
			_add_override "app/${2}"
		elif [[ -d /system/priv-app/${2} ]]; then
			echo "Adding override for priv-app \"${2}\""
			echo "APPS=(
$(printf '%s\n' "${APPS[@]}")
)
PRIV_APPS=(
$(printf '%s\n' "${PRIV_APPS[@]}")
${2}
)" > "${config}"
			_add_override "priv-app/${2}"
		else	echo "\"${2}\" not found in /system/app or /system/priv-app"
		fi
	;;

	-r | --remove )
		if grep -q " ${2} " "${config}"; then
			sed -e "/^${2}$/d" -i "${config}"
			if [[ ${APPS[*]} == *${2}* ]]; then
				echo "Removing override for app: \"${2}\""
				remove_override "app/${2}"
			elif [[ ${PRIV_APPS[*]} == *${2}* ]]; then
				echo "Removing override for priv-app: \"${2}\""
				remove_override "priv-app/${2}"
			fi
		else	echo "No override for \"${2}\" found"
		fi
	;;

	-u | --update )

		_rm_overrides

		for app in "${APPS[@]}"; do
			_add_override app "${app}"
		done

		for app in "${PRIV_APPS[@]}"; do
			_add_override priv-app "${app}"
		done
	;;

	-s | --show )

		for app in /system/app/*/*.apk; do
			sysname=$(basename "${app}" .apk)
			if [[ ! -d ${MODPATH}/system/app/${sysname} ]]; then
				humname=$(_show_name "${app}")
				S_APPS="${S_APPS}
* ${sysname}		(${humname})"
			fi
		done

		for app in /system/priv-app/*/*.apk; do
			sysname=$(basename "${app}" .apk)
			if [[ ! -d ${MODPATH}/system/priv-app/${sysname} ]]; then
				humname=$(_show_name "${app}")
				S_PRIV_APPS="${S_PRIV_APPS}
* ${sysname}		(${humname})"
			fi
		done

		echo "Non-Overriden applications in /system/app:

$(printf '* %s\n' "${S_APPS[@]}")

Non-Overriden applications in /system/priv-app:

$(printf '* %s\n' "${S_PRIV_APPS[@]}")
"

	;;

	-d | --delete )
		_delete_overrides
	;;

	-p | --permissions )
		pm grant com.google.android.gms android.permission.FAKE_PACKAGE_SIGNATURE
		pm grant com.android.vending android.permission.FAKE_PACKAGE_SIGNATURE
	;;

	* )
		echo "nanomod-overlay helper script

Options:
-a | --add	[appname]	add override for app [appname]
-r | --remove	[appname]	remove override for app [appname]
-s | --show			show non-overriden /system applications
-l | --list			show all overriden /system applications
-u | --update			update all overrides
-d | --delete			delete all overrides
-p | --permission		grant fakesign permission to microG GmsCore
				and Play Store, aswell as ignore battery
				optimization permission to microG GmsCore
-h | --help			this message"
	;;

esac
