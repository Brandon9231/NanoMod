#!@MODPATH@/system/bin/bash

export NO_MAGISK=0
export NO_CONFIG=0
export MODPATH=@MODPATH@

# check for configuration files
config_locations="/sdcard /external_sd /persist /data @ZIPDIR@"

source "${MODPATH}/system/bin/nanomod-overlay.functions"
get_config .nanomod-overlay

[[ "${MODPATH}" != "/magisk/"* ]] && NO_MAGISK=1

[[ -f ${config} ]] && source "${config}"

if [[ ${NO_MAGISK} -eq 0 ]]; then

case ${1} in
	-l | --list )
		nanomod-overlay.listoverrides
	;;

	-a | --add )
		nanomod-overlay.addoverrides "${2}"
	;;

	-r | --remove )
		nanomod-overlay.removeoverrides "${2}"
	;;

	-u | --update )
		nanomod-overlay.updateoverrides
	;;

	-s | --show )
		nanomod-overlay.shownonoverrides
	;;

	-c | --clear )
		clear_overrides
	;;

	-p | --permission )
		pm grant com.google.android.gms android.permission.FAKE_PACKAGE_SIGNATURE
		pm grant com.android.vending android.permission.FAKE_PACKAGE_SIGNATURE
	;;

	* )
		echo "nanomod-overlay helper script

Options:
-a | --add	[appname]	add override for app [appname]
-r | --remove	[appname]	remove override for app [appname]
-s | --show			show non-overriden /system applications
-l | --list			show all overriden /system applications
-u | --update			update all overrides
-c | --clear			remove all overrides
-p | --permission		grant signature spoofing permission to
				microG GmsCore and Play Store
-h | --help			this message"
	;;
esac

else

case ${1} in
	-p | --permission )
		pm grant com.google.android.gms android.permission.FAKE_PACKAGE_SIGNATURE
		pm grant com.android.vending android.permission.FAKE_PACKAGE_SIGNATURE
	;;

	* )
		echo "nanomod-overlay helper script

*** SYSTEM MODE! LIMITED FUNCTIONALITY! ***

Options:
-p | --permission		grant signature spoofing permission to
				microG GmsCore and Play Store
-h | --help			this message"
	;;
esac

fi
